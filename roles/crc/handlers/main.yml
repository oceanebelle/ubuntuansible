---
- name: Delete existing crc VM
  shell: crc version && crc delete -f
  register: out
  ignore_errors: yes

- name: Get CRC Checksum
  uri:
    url: "{{ crc_check_url }}"
    return_content: true
  register: url_sha256

- name: Set CRC Checksum
  set_fact:
    crc_checksum: "{{ url_sha256.content.split('  ')[0] }}"

- name: Download CRC
  get_url:
    url: "{{ crc_url }}"
    dest: "{{ crc_tmp_file }}"
    checksum: "sha256:{{ crc_checksum }}"
  register: out  


- name: Create crc install dir
  file:
    path: "{{ crc_install_dir }}"  
    state: directory
    mode: "u=rw,g=wx,o=rwx"
  become: yes  

- name: Extract crc into install dir
  unarchive:
    src: "{{ crc_tmp_file }}"
    dest: "{{ crc_install_dir }}" 
    list_files: yes
  register: out

- name: Add pull secret
  template:
    src: pullsecret
    dest: "{{ crc_install_dir }}/pullsecret"
    mode: '0644'
    backup: yes  

- name: Set crc binary
  set_fact: 
    crc_path: "{{ crc_install_dir }}/{{ out.files | select('match', '^.+/crc$') | list | join }}"

- name: Create install symlink
  file:
    src: "{{ crc_path }}"
    dest: "{{ crc_install_dir }}/crc"
    state: link
    force: yes
    mode: u+rwx    

- name: Update executable symlink
  file:
    src: "{{ crc_install_dir }}/crc"
    dest: "{{ crc_executable }}"
    state: link
    force: yes
  register: out  
  become: yes

- name: Add docker daemon.json
  template:
    src: etc-docker-daemon.json.j2
    dest: /etc/docker/daemon.json
    mode: '0644'
    backup: yes
  become: yes    

- name: Restart docker  
  service: 
    name: docker
    state: restarted
  register: out  
  become: yes

- name: Setup crc
  shell: "crc version && crc setup && crc start -p {{ crc_install_dir }}/pullsecret"
  register: out  


- name: Print out
  debug: var=out  


    